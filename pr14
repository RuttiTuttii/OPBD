Для выполнения практической работы по созданию многотабличных SQL-запросов, используйте следующие решения. Предполагается, что структура базы данных включает таблицы: `Книги`, `Авторы`, `Заказчики`, `Заказы`, `СоставыЗаказов`.

---

### **5.1. Сведения о книгах: код, название, автор (ФИ), цена**
```sql
SELECT 
    Книги.код_книги, 
    Книги.название, 
    Авторы.фамилия, 
    Авторы.имя, 
    Книги.цена
FROM Книги
INNER JOIN Авторы ON Книги.код_автора = Авторы.код_автора;
```

---

### **5.2. Сведения о составах заказов**
```sql
SELECT 
    СоставыЗаказов.номер_заказа,
    Книги.код_книги,
    Книги.название,
    Авторы.фамилия,
    Авторы.имя,
    Книги.цена,
    СоставыЗаказов.количество,
    (Книги.цена * СоставыЗаказов.количество) AS стоимость
FROM СоставыЗаказов
INNER JOIN Книги ON СоставыЗаказов.код_книги = Книги.код_книги
INNER JOIN Авторы ON Книги.код_автора = Авторы.код_автора;
```

---

### **5.3. Стоимость каждого заказа (сортировка по дате)**
```sql
SELECT 
    Заказы.номер_заказа,
    Заказы.дата_заказа,
    SUM(Книги.цена * СоставыЗаказов.количество) AS стоимость_заказа
FROM Заказы
INNER JOIN СоставыЗаказов ON Заказы.номер_заказа = СоставыЗаказов.номер_заказа
INNER JOIN Книги ON СоставыЗаказов.код_книги = Книги.код_книги
GROUP BY Заказы.номер_заказа, Заказы.дата_заказа
ORDER BY Заказы.дата_заказа DESC;
```

---

### **5.4. Количество заказов для каждого заказчика (включая нулевые)**
```sql
SELECT 
    Заказчики.код_заказчика,
    Заказчики.логин,
    COUNT(Заказы.номер_заказа) AS количество_заказов
FROM Заказчики
LEFT JOIN Заказы ON Заказчики.код_заказчика = Заказы.код_заказчика
GROUP BY Заказчики.код_заказчика, Заказчики.логин;
```

---

### **5.5. Заказы без состава**
```sql
SELECT *
FROM Заказы
WHERE номер_заказа NOT IN (
    SELECT номер_заказа 
    FROM СоставыЗаказов
);
```

---

### **5.6. Заказчики, сделавшие хотя бы один заказ**
```sql
SELECT *
FROM Заказчики
WHERE код_заказчика IN (
    SELECT код_заказчика 
    FROM Заказы
);
```

---

### **5.7. Объединённый список авторов и заказчиков (с типом)**
```sql
SELECT 
    фамилия, 
    имя, 
    'Автор' AS тип 
FROM Авторы
UNION ALL
SELECT 
    фамилия, 
    имя, 
    'Заказчик' 
FROM Заказчики
ORDER BY фамилия, имя;
```

---

### **Рекомендации по выполнению:**
1. **Редактор запросов:** Вручную введите SQL-код в SSMS.  
2. **Конструктор запросов:**  
   - ПКМ по БД → **New Query** → использовать шаблоны.  
   - Для JOIN: перетащите таблицы на диаграмму, свяжите поля.  
3. **Контекстное меню:**  
   - ПКМ по таблице → **Select Top 1000 Rows** → отредактируйте автоматический запрос.  
4. **Проверка:** Запускайте запросы пошагово (начинайте с простых JOIN).

> **Примечание:** Адаптируйте названия таблиц/полей под вашу схему БД. Для заданий 5.3 и 5.4 убедитесь, что агрегатные функции (`SUM`, `COUNT`) корректно сгруппированы.